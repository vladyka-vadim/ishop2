1. Шаблон AdminLTE

кратко:
 - подключиить шаблон админки по адресу http://ishop2.loc/admin/

не кратко:
 - создать главный контроллер
 - создать базовый контроллер
 - создать вид для главного контроллера
 - скопировать файлы для шаблона AdminLTE в папку public
 - создать шаблон admin и вывести необходимую разметку
    - используя константу ADMIN укажи ссылки в сайдбаре
 - задать шаблон admin на уровне базового контроллера
 - вывести в вид главного контроллера необходимую разметку
    - используя константу ADMIN укажи ссылки в хлебных крошках
 - создать 2 js переменные path и adminpath в шаблоне используя предопределенные константы


2. Авторизация администратора

кратко:
 - когда пользователь авторизован или авторизован и у него роль не админ,
   тогда при доступе к любому админскому контроллеру, к любому админскому action,
   он будет перенаправляться на определенный контроллер для авторизации.
   При входе пользователя с ролью admin должен быть выполнено перенаправление на панель управления.

не кратко:
 - вывести метаданные в шаблон панели управления (задать произвольные данные)
 - установить фавикон
 - в базовом классе AppController в конструкторе, проверить, если пользователь не являлется админом, то перенаправить
   его на адрес http://ishop2.loc/admin/user/login-admin для авторизации
 - создать контроллер UserController и метод loginAdminAction, вывести произвольную строку и завершить работу
 - понять почему происходит цикличность и дописать условие для устранения цикличности
 - задать шаблон login на уровне метода loginAdminAction
 - создать шаблон login
 - создать вид для UserController (изменить иконку и убрать нереализуемый функционал)
 - реализовать метод loginAdminAction (на основе как реализовывано для пользователей)
   - выполнить редирект на панель управления, иначе выполнить на эту же страницу
 - реализовать вывод ошибок в виде
 - зарегистрировать нового пользователя и задать ему роль admin
 - авторизоваться под администратором
 - удалить не нужные стили из шаблона admin (не обязательно)
 - добавить в шаблон скрипт для отладки sql - запросов
 - создать объект модели в базовом контроллере для подключения библиотеки ReadBean


3. Виджеты главной страницы

кратко:
    - вывести данные в виджеты главной страницы

не кратко:
    - вывести кол-во необработанных заказаов
    - вывести кол-во пользолвателей
    - вывести кол-во продуктов
    - вывести кол-во категорий
    - указать ссылки в виджетах для перехода


4. Список заказов

кратко:
    - вывести список заказов со столбцами:
      - id (заказа), покупатель (имя), статус, сумма (и валюта заказа), дата создания, дата изменения, действия (значок просмотра)
    - должна быть реализована постраничная пагинация

не кратко:
    - создать контроллер заказаов
    - задать метаданные
    - создать вид
    - вывести в вид необходимую разметку:
      - используя константу ADMIN укажи ссылки в хлебных крошках
      - создай таблицу (см. в "кратко")
    - использовать класс пагинации
    - реализовать запрос для выборки данных сгруппировать по статусу и id
    - передать данные в вид
    - в столбец "статус" в зависимости от 0 и 1, выводить "новый" либо "завершен",
     а также добавить к строке заказа класс success если заказ "завершен".
    - указать ссылку для просмотра заказа


5. Обработка заказа. Часть 1

кратко:
    - вывести подробную информацию о заказе при клике на "просмотр заказа":

      заказ номер №
      - номер заказа
      - дата заказа
      - дата изменения
      - кол-во позиций в заказе (пока просто разметка)
      - сумма заказа
      - имя заказчика
      - статус
      - комментарий

      детали заказа
      id, наименование, кол-во, цена
      итого (кол-во, цена)


не кратко:
    - в базовом контроллере приложения создать метод getRequestId, который будет получать id из массива GET или POST
    (по умолчанию должен браться элемент из массива get и элемент должен быть id, если id не получили выбросить исключение)
    - реализовать запрос для выборки одной записи заказа, если заказ не удалось получить выбросить исключение
    - реализовать запрос для выборки всех товаров данного заказа
    - доработать метод debug, при передаче ему парметра true завершать работату и выходить
    - задать метаданные (заказ номер №)
    - передать данные в вид
    - вывести в вид необходимую разметку:
          - используя константу ADMIN укажи ссылки в хлебных крошках и активным элементом "заказ номер №"
          - создай таблицы (см. в "кратко")
    - установить ссылку на лого для перехода на пользовательскую часть
    - убрать условие записи в сессию сообщению об успешной авториазции администратора
    - вывести в шаблоне администратора имя администратора
    - убрать не нужную разметку
    - указать ссылки для profile и sign out


6. Обработка заказа. Часть 2

кратко:
    -

не кратко:
    - в шаблон админки перед контентом добавить вывод из сессии error или success (скопируй из шаблона watches)
    - в подробной информации о заказе добавить кнопки: обработать, вернуть на доработку, удалить.
    (если заказ новый выводим кнопку "обработать", "вернуть на доработку", для кнопки "удалить" добавить специальный класс delete)
    - в папке adminlte добавить файлы my.css и my.js и подключить к шаблону
    - повестить js - обработчик на класс delete
    - реализовать метод changeAction изменить поле status, update_at данного заказа (записать в сессию, что изменения сохранены)
    - доработать поле "кол-во позиций в заказе"
    - реализовать метода deleteAction удалить данный заказ (записать в сесесию, что заказ удален и выполнить редирект на список заказов)
    - в списке заказов добавить крестик для удаления заказа из списка


7. Управление категориями. Часть 1

кратко:
    -

не кратко:
    - создать контроллер категорий
    - задать метаданные
    - создать вид
    - вывести в вид необходимую разметку:
        - используя константу ADMIN укажи ссылки в хлебных крошках и активным элементом "список категорий"
        - используя виджет меню передать необходимые параметры для работы виджета
          - tpl, container, cache, cacheKey, class
        - скопируй необходимые стили в файл my.css
    - создай шаблон для виджета на основе данной разметки

   <div class="list-group list-group-root well">
   	<p class="item-p">
   		<a class="list-group-item" href="http://ishop2.loc/admin/category/edit?id=1">Men</a> <span><i
   				class="fa fa-fw fa-close"></i></span>
   	</p>
   	<div class="list-group">
   		<p class="item-p">
   			<a class="list-group-item" href="http://ishop2.loc/admin/category/edit?id=4">Электронные</a> <span><i
   					class="fa fa-fw fa-close"></i></span>
   		</p>
   		<div class="list-group">
   			<p class="item-p">
   				<a class="list-group-item" href="http://ishop2.loc/admin/category/edit?id=6">Casio</a> <span><a
   						href="http://ishop2.loc/admin/category/delete?id=6" class="delete"><i
   							class="fa fa-fw fa-close text-danger"></i></a></span>
   			</p>
   			<p class="item-p">
   				<a class="list-group-item" href="http://ishop2.loc/admin/category/edit?id=7">Citizen</a> <span><a
   						href="http://ishop2.loc/admin/category/delete?id=7" class="delete"><i
   							class="fa fa-fw fa-close text-danger"></i></a></span>
   			</p>
   		</div>
   	</div>
   </div>

    - реализовать метод deleteAction
      - если в категории есть вложенные категории и товары, записать ошибки в сессию и выполнить редирект
      - иначе удалить категорию и записать в сессию и выполнить редирект


8. Управление категориями. Часть 2

- кратко:
    - сделать активным выбранный пункт меню сайдбара

- не кратко:
    - написать скрипт который пройдется по всем ссылкам сайдбара и сравнит с текущим url (учитывать пагинацию)
      если они одна из ссылок равна url добавить элментам классы active


9. Управление категориями. Часть 3

- кратко:

- не кратко:
    - создать метод добавления категории addAction
    - задать метаданные
    - создать вид
    - вывести в вид необходимую разметку:
        - используя константу ADMIN укажи ссылки в хлебных крошках и активным элементом "добавление категории"
        - используя виджет меню передать необходимые параметры для работы виджета
          - tpl, container, cache, cacheKey, class, attrs (name, id), prepend
    - создай шаблон для виджета на основе данной разметки

    <form action="http://ishop2.loc/admin/category/add" method="post" data-toggle="validator" novalidate="true">
    	<div class="form-group has-feedback">
    		<label for="title">Наименование категории</label>
    		<input type="text" name="title" class="form-control" id="title" placeholder="Наименование категории"
    			required="">
    		<span class="glyphicon form-control-feedback" aria-hidden="true"></span>
    	</div>
    	<div class="form-group">
    		<label for="parent_id">Родительская категория</label>
    		<select class="form-control" name="parent_id" id="parent_id">
    			<option value="0">Самостоятельная категория</option>
    			<option value="1">Men</option>
    			<option value="4">&nbsp;-Электронные</option>
    			<option value="6">&nbsp;&nbsp;--Casio</option>
    			<option value="7">&nbsp;&nbsp;--Citizen</option>
    			<option value="5">&nbsp;-Механические</option>
    			<option value="8">&nbsp;&nbsp;--Royal London</option>
    			<option value="9">&nbsp;&nbsp;--Seiko</option>
    			<option value="10">&nbsp;&nbsp;--Epos</option>
    			<option value="2">Women</option>
    			<option value="11">&nbsp;-Электронные</option>
    			<option value="13">&nbsp;&nbsp;--Adriatica</option>
    			<option value="12">&nbsp;-Механические</option>
    			<option value="14">Kids</option>
    		</select>
    	</div>
    	<div class="form-group">
    		<label for="keywords">Ключевые слова</label>
    		<input type="text" name="keywords" class="form-control" id="keywords" placeholder="Ключевые слова">
    		<span class="glyphicon form-control-feedback" aria-hidden="true"></span>
    	</div>
    	<div class="form-group">
    		<label for="description">Описание</label>
    		<input type="text" name="description" class="form-control" id="description" placeholder="Описание">
    		<span class="glyphicon form-control-feedback" aria-hidden="true"></span>
    	</div>
    	<div class="box-footer">
    		<button type="submit" class="btn btn-success disabled">Добавить</button>
    	</div>
    </form>

     - подключи js валидатор к шаблону админки
     - опиши метод addAction
       - проверить не пуст ли массив $_POST
       - создать объект модели категории
       - загрузить эти данные
       - если данные не прошли валидацию, получить ошибки и выполнить редирект
     - добавить атрибуты и обязательные поля в модель категории
     - закончить на условии если мы получаем id добавленной категории (если сохранили категорию без алиаса)


10. Управление категориями. Часть 4

- кратко:

- не кратко:
  - необходимо расширить базовую модель нашего приложения статичными методами:
    - str2url - скопировать
    - rus2translit - скопировать
    (данные методы транслитерируют строку)
    - createAlias - метод принимает 4 параметра $table, $field, $str, $id
      - принимает строку и используя метод str2url внутри класса переводит ее в транислит
      - проверяет есть в таблице поле со строкой которую транслитериhовали, если да,
        то добавляет через дефис id
      - еще раз проверяет и рекурсивно добаляет через дефис id

  - продолжаем на условии если мы получаем id добавленной категории (если сохранили категорию без алиаса), то
    - генериуем алиас вызывая статичный метод createAlias передавая ему параметры
    - получаем объект категории
    - обновляем поле alias
    - сохраняем объект
    - записываем в сессию что категория добавлена
    - выполняем редирект


11. Управление категориями. Часть 5

- не кратко:
    - создать метод редактирования категории editAction
    - передать данные в вид (изначально получить бин категории)
    - задать метаданные
    - создать вид
    - вывести в вид необходимую разметку (скопируй на основе addAction):
        - используя константу ADMIN укажи ссылки в хлебных крошках и активным элементом "редактирование категории - название категории"
        - значениями полей укажи данные категории
        - создай скрытое поле в котором будет храниться  id категории
    - записть в реестр parent_id и использовать в select.php для поля "родительская категория"
    - сделать не активным элемент поля "родительская категория", т.к шаблон select используется и для add, сделать доп. проверку.
    - далее выполнить практическии аналогичную логику по аналогии с методом add, только в базовую модель добавить метод update


12. Управление кэшем

кратко:
    - вывести список таблицу со столбцами:
      название, описание, действие

      название - кэш категорий, кэш фильтров
      описание - Меню категорий на сайте. Кэшируется на 1 час. Кэш фильтров и групп фильтров. Кэшируется на 1 час
      действие - значок удаления



13.  Управление пользователями. Часть 1

кратко:
    - вывести список пользователй в таблицу со столбцами:
      id, логин, email, имя, роль, действия (значок просмотра)
     - должна быть реализована постраничная пагинация
    - значок просмотра должен вести на форму редактирвания пользователя c полями:
      логин, логин (введите логин, если выхотите его изменить), имя, email, адрес, роль
    - если просматриваем пользователся роль указывается "пользователь" иначе "администратор"


14.  Управление пользователями. Часть 2

кратко:
  - под формой редактирования пользователя вывести список его заказов в таблицу со столбцами:
  id, статус, сумма, дата создания, дата изменения, действия (значок просмотра)
  - если у пользователся нет заказов вывести сообщение - "пользователь пока ничего не заказывал"
  - должна работать система статусов "новый" либо "завершен"


15. Управление пользователями. Часть 3

кратко:
   - необходимо реализовать функционал редактирования данных пользователя,
   для этого у нас есть модель user, но есть некоторые нюансы,
   например мы должны проверять логин и пароль всех записей кроме текущей.


16. Управление пользователями. Часть 4

кратко:
   - необходимо реализовать функционал добавления пользователя
   для этого можно использовать клиентскую часть регистраици пользователя, но добавить в вид и роль пользовтеля


Урок 17.  Управление товарами. Список товаров

кратко:
    - вывести список товаров в таблицу со столбцами:
      id, категория, наименование, цена, статус, действия (значок просмотра, значок удаления товара)
      - должна быть реализована постраничная пагинация
      - товары должны быть отсортированы по наименованию


Урок 18.  Управление товарами. Форма добавления

кратко:
    - необходимо реализовать функционал добавления товара с полями формы:
      наименование товара, родительская категория, ключевые слова, описание, цена, старая цена, контент, стутус (флажок должен быть отмечен), хит


Урок 19. Управление товарами. CKEditor

кратко:
    - подлкючить редактор CKEditor
    - сформировать alias при добавлении продукта
    - подключить плагин KCFinder
    - изменить папку загрузки файлов
    - включить динамически возможность загрузки файлов, то есть если пользователь является админом


20. Управление товарами. Добавление фильтров

кратко:
    - поправить ошибку подключения CKEditor
    - в форме добавления товаров используя вкладки admin lte 2.4.0 реализовать вывод фильтров
    - при добвалении опций менеджером необходимо учесть:
      - если на сервер пришел пустой массив атрибтутов, но при этом достали опции товаров из таблицы - значит пользователь удалили опции у товаров
      - если на сервер пришел не пустой массив аттрибутов, но при этом не достали никаких опций товаров из таблицы - значит пользователь добавил опции к товарам
      - если на сервер пришел не пустой массив аттриубтутов - получить разницу между полученным массивом атрибутов и данными в таблице -
        - если разница есть (использовать как флаг) - удалить и записать данные



21. Управление товарами. Связанные товары. Часть 1

кратко:
    - добавить кнопку сброса фильтров (при клике на кнопку получить все элементы типа радио и изменить значение на false, также учесть что это клик по кнопке)
    - используя плагин select2 реализовать ассинхронный запрос который при вводе будет находить товары (multi-select boxes)


22. Управление товарами. Связанные товары. Часть 2

кратко:
    - при добавлении связанных товаров менеджером необходимо учесть:
      - ту же логику как и что и при доабвлении филтьтров
      (но необходимо будет изменить логику которая заключается в разнице массивов, т.к. фнкция array_diff может и не вернуть разницу массивов)



23. Управление товарами. Загрузка картинок. Часть 1

кратко:
    - в параметрах сайта указать размеры картинок для базового изображения и картинок галереи
    - исполльзуя плагин ajax upload реализовать клиентскую логику загрузки файлов для базового изображения и картинок галереи
    (при отправке должен срабатывать прелоудер, после отправки вставляться изображение)


24. Управление товарами. Загрузка картинок. Часть 2

кратко:
    - реализовать серверную часть загрузки изображений, а также загрузку изображений в базу данных
    (максимально допустимые размеры брать из контейнера свойств)


25. Управление товарами. Редактирование товара. Часть 1

кратко:
    - поправить ошибку плагина ajax upload
    (на странице с данными кнопками ошибки не возникает, нужно проверить есть ли на страницы div с указанным id,
    если есть получить объекты jquery и обернуть объекты ajax upload в условия)

    - создать метод редактирования товара editAction
    - передать необходимые данные в вид
    - задать метаданные
    - создать вид
    - вывести в вид необходимую разметку (скопируй на основе addAction):
        - используя константу ADMIN укажи ссылки в хлебных крошках и активным элементом "редактирование товара - название товара"
        - значениями полей укажи данные товара
        - создай скрытое поле в котором будет храниться  id категории


26.  Управление товарами. Редактирование товара. Часть 2

кратко:
    - реализовать клиентскую и серверную часть логики удаления картинок галереи
    - далее выполнить практическии аналогичную логику по аналогии с методом add, только использовать метод update
    - поправить баг с сохранением фильтров


27. Управление товарами. Редактирование товара. Часть 3

кратко:
    - домашнее задание удалить продукт и все связанные с ним товары (не реализовано в видео)
    - товары со статусом 0 не должны показываться на страницах категорий и странице поиска
    - вместо текущего плагина для поиска можно прикрутить живой поиск на jquery ui - autocomplete (не реализовано в видео)


28. Управление фильтрами. Часть 1

кратко:
    - добавить в шаблон админки:
        - валюты (список валют, добавить валюту)
        - фильтры (группы фильтров, фильтры)

    - вывести таблицу групп фильтров со столбцами:
        - наименование, действие (значок просмотра, значок удаления)
        - перед таблицей добавить кнопку добавить группу

    - реализовать удаление групп фильтров
    - реализовать добавление групп фильтров (наименование группы)

    - поправить ошибку связанную с наименованиями таблиц в read bean php
    - поправить ошибку связанную с выводом аттрибутов в пустой группе фильтров


29. Управление фильтрами. Часть 2

кратко:
    - вывести таблицу фильтров со столбцами:
        - наименование, группа, действие (значок просмотра, значок удаления)
        - перед таблицей добавить кнопку добавить атрибут

    - реализовать добавление атрибута (наименование, выберите группу)

    - реализовать клиентскую валидицию проверки поля (выберите группу и выберите категорию из формы добавления товара)


30. Управление фильтрами. Часть 3

кратко:
    - функцию h лучше использовать в методе setMeta
    - реализовать редактирование групп фильтров (наименование)
    - реализовать редактирование атрибутов (наименование, группа)
    - реализовать удаление атрибутов



31. Управление валютами. Часть 1

кратко:
    - вывести таблицу фильтров со столбцами:
        - id, наименование, код, значение, действия (значок просмотра, значок удаления)

    - реализовать добавление валюты (наименование, код валюты, символ слева, символ справа, значение, галочка базовая валюта)


32. Управление валютами. Часть 1

кратко:
    - реализовать редактирование валюты (наименование, группа)
    - реализовать удаление валюты




*****************************************

Бонус 3.

1. Перенос сайта на хостинг

кратко:
    - перенести сайта на хостинг (файлы, базу)
    - настроить соединение с базой данной через ftp
    - поправить ошибку подключения видов
    - проверить работу smtp - сервера и функционала сайта


Бонус 4.

1. Подключение платежной системы. Часть 1

кратко:
    - внести настройки в interkassa


2. Подключение платежной системы. Часть 2

кратко:
    - для подключения платежной системы сайт должен быть на хостинге


Бонус 5.

1. Личный кабинет покупателя. Часть 1

кратко:
    - реализовать редактирование данных пользователя в личном кабинете


2. Личный кабинет покупателя. Часть 2

кратко:
    - релаизовать просмотр заказов личном кабинете


Бонус 6.

1. Канонические URL

кратко:
    -













